@article{nosql_survey,
  author  = {Felix Gessert and Wolfram Wingerath and Steffen Friedrich and Norbert Ritter},
  title   = {NoSQL database systems: a survey and decision guidance},
  journal = {Computer Science - Research and Development},
  volume  = {32},
  number  = {3},
  pages   = {353--365},
  year    = {2017},
  doi     = {10.1007/s00450-016-0334-3},
  url     = {https://doi.org/10.1007/s00450-016-0334-3},
  issn    = {1865-2042}
}


@book{mongodb_definitive_guide,
  added-at  = {2011-11-18T13:08:30.000+0100},
  author    = {Chodorow, Kristina and Dirolf, Michael},
  biburl    = {https://www.bibsonomy.org/bibtex/2e2b4c1766e1834d05d8e749623205c93/nosebrain},
  ee        = {http://www.oreilly.de/catalog/9781449381561/index.html},
  interhash = {a9864a2f43d20fd2c107945fd5b1b402},
  intrahash = {e2b4c1766e1834d05d8e749623205c93},
  isbn      = {978-1-449-38156-1},
  keywords  = {mongodb},
  pages     = {I-XVII, 1-193},
  publisher = {O'Reilly},
  timestamp = {2011-11-18T13:08:30.000+0100},
  title     = {MongoDB - The Definitive Guide: Powerful and Scalable Data Storage.},
  year      = 2010
}


@techreport{mongodb_architecture,
  title       = {MongoDB Architecture Guide},
  author      = {{MongoDB Inc.}},
  institution = {MongoDB Inc.},
  year        = {2023},
  url         = {https://docs.mongodb.com/manual/core/}
}

@article{cassandra_architecture,
  author     = {Lakshman, Avinash and Malik, Prashant},
  title      = {Cassandra: a decentralized structured storage system},
  year       = {2010},
  issue_date = {April 2010},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {44},
  number     = {2},
  issn       = {0163-5980},
  url        = {https://doi.org/10.1145/1773912.1773922},
  doi        = {10.1145/1773912.1773922},
  abstract   = {Cassandra is a distributed storage system for managing very large amounts of structured data spread out across many commodity servers, while providing highly available service with no single point of failure. Cassandra aims to run on top of an infrastructure of hundreds of nodes (possibly spread across different data centers). At this scale, small and large components fail continuously. The way Cassandra manages the persistent state in the face of these failures drives the reliability and scalability of the software systems relying on this service. While in many ways Cassandra resembles a database and shares many design and implementation strategies therewith, Cassandra does not support a full relational data model; instead, it provides clients with a simple data model that supports dynamic control over data layout and format. Cassandra system was designed to run on cheap commodity hardware and handle high write throughput while not sacrificing read efficiency.},
  journal    = {SIGOPS Oper. Syst. Rev.},
  month      = apr,
  pages      = {35–40},
  numpages   = {6}
}


@techreport{cassandra_documentation,
  title       = {Apache Cassandra Documentation},
  author      = {{Apache Software Foundation}},
  institution = {Apache Software Foundation},
  year        = {2025},
  url         = {https://cassandra.apache.org/doc/latest/}
}

@article{neo4j_survey,
  author     = {Angles, Renzo and Gutierrez, Claudio},
  title      = {Survey of graph database models},
  year       = {2008},
  issue_date = {February 2008},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {40},
  number     = {1},
  issn       = {0360-0300},
  url        = {https://doi.org/10.1145/1322432.1322433},
  doi        = {10.1145/1322432.1322433},
  abstract   = {Graph database models can be defined as those in which data structures for the schema and instances are modeled as graphs or generalizations of them, and data manipulation is expressed by graph-oriented operations and type constructors. These models took off in the eighties and early nineties alongside object-oriented models. Their influence gradually died out with the emergence of other database models, in particular geographical, spatial, semistructured, and XML. Recently, the need to manage information with graph-like nature has reestablished the relevance of this area. The main objective of this survey is to present the work that has been conducted in the area of graph database modeling, concentrating on data structures, query languages, and integrity constraints.},
  journal    = {ACM Comput. Surv.},
  month      = feb,
  articleno  = {1},
  numpages   = {39},
  keywords   = {graph query languages, graph integrity constraints, graph databases, graph database models, database models, Database systems}
}


@techreport{neo4j_manual,
  title       = {Neo4j Operations Manual},
  author      = {{Neo4j Inc.}},
  institution = {Neo4j Inc.},
  year        = {2025},
  url         = {https://neo4j.com/docs/operations-manual/current/}
}

@inproceedings{redis_paper,
  author    = {Seghier, Nadia Ben and Kazar, Okba},
  booktitle = {2021 International Conference on Recent Advances in Mathematics and Informatics (ICRAMI)},
  title     = {Performance Benchmarking and Comparison of NoSQL Databases: Redis vs MongoDB vs Cassandra Using YCSB Tool},
  year      = {2021},
  volume    = {},
  number    = {},
  pages     = {1-6},
  keywords  = {Cloud computing;NoSQL databases;Scalability;Computational modeling;Relational databases;Big Data;Tools;cloud computing;big data;NoSQL;key-value store;document store;column database;YCSB},
  doi       = {10.1109/ICRAMI52622.2021.9585956}
}


@techreport{redis_documentation,
  title       = {Redis Documentation},
  author      = {{Redis Ltd.}},
  institution = {Redis Ltd.},
  year        = {2025},
  url         = {https://redis.io/documentation}
}

@inproceedings{cockroachdb_paper,
  author    = {Taft, Rebecca and Sharif, Irfan and Matei, Andrei and VanBenschoten, Nathan and Lewis, Jordan and Grieger, Tobias and Niemi, Kai and Woods, Andy and Birzin, Anne and Poss, Raphael and Bardea, Paul and Ranade, Amruta and Darnell, Ben and Gruneir, Bram and Jaffray, Justin and Zhang, Lucy and Mattis, Peter},
  title     = {CockroachDB: The Resilient Geo-Distributed SQL Database},
  year      = {2020},
  isbn      = {9781450367356},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3318464.3386134},
  doi       = {10.1145/3318464.3386134},
  abstract  = {We live in an increasingly interconnected world, with many organizations operating across countries or even continents. To serve their global user base, organizations are replacing their legacy DBMSs with cloud-based systems capable of scaling OLTP workloads to millions of users. CockroachDB is a scalable SQL DBMS that was built from the ground up to support these global OLTP workloads while maintaining high availability and strong consistency. Just like its namesake, CockroachDB is resilient to disasters through replication and automatic recovery mechanisms. This paper presents the design of CockroachDB and its novel transaction model that supports consistent geo-distributed transactions on commodity hardware. We describe how CockroachDB replicates and distributes data to achieve fault tolerance and high performance, as well as how its distributed SQL layer automatically scales with the size of the database cluster while providing the standard SQL interface that users expect. Finally, we present a comprehensive performance evaluation and share a couple of case studies of CockroachDB users. We conclude by describing lessons learned while building CockroachDB over the last five years.},
  booktitle = {Proceedings of the 2020 ACM SIGMOD International Conference on Management of Data},
  pages     = {1493–1509},
  numpages  = {17},
  location  = {Portland, OR, USA},
  series    = {SIGMOD '20}
}


@techreport{cockroachdb_docs,
  title       = {CockroachDB Documentation},
  author      = {{Cockroach Labs}},
  institution = {Cockroach Labs},
  year        = {2025},
  url         = {https://www.cockroachlabs.com/docs/stable/}
}

@article{acid_properties,
  title     = {Concurrency Control and Recovery in Database Systems},
  author    = {Bernstein, Philip A and Hadzilacos, Vassos and Goodman, Nathan},
  journal   = {ACM Computing Surveys},
  volume    = {19},
  number    = {1},
  pages     = {1--21},
  year      = {1987},
  publisher = {ACM},
  doi       = {10.1145/1994.2207}
}

@book{database_systems,
  title     = {Database System Concepts},
  author    = {Silberschatz, Abraham and Korth, Henry F and Sudarshan, S},
  year      = {2019},
  edition   = {7th},
  publisher = {McGraw-Hill Education},
  isbn      = {978-0078022159},
  url       = {https://www.db-book.com/}
}

@article{nosql_performance,
  title       = {Which NoSQL Database? A Performance Overview},
  author      = {Abramova, Veronika and Bernardino, Jorge and Furtado, Pedro},
  journal     = {Open Journal of Databases (OJDB)},
  volume      = {1},
  number      = {2},
  year        = {2014},
  publisher   = {RonPub},
  issn        = {2199-3459},
  url         = {https://www.ronpub.com/journals/ojdb},
  note        = {Open Access},
  institution = {Polytechnic Institute of Coimbra and University of Coimbra}
}



@techreport{bson_specification,
  title       = {BSON Specification},
  author      = {{MongoDB Inc.}},
  institution = {MongoDB Inc.},
  year        = {2025},
  url         = {https://bsonspec.org/}
}

@inproceedings{cypher_query_language,
  author    = {Francis, Nadime and Green, Alastair and Guagliardo, Paolo and Libkin, Leonid and Lindaaker, Tobias and Marsault, Victor and Plantikow, Stefan and Rydberg, Mats and Selmer, Petra and Taylor, Andr\'{e}s},
  title     = {Cypher: An Evolving Query Language for Property Graphs},
  year      = {2018},
  isbn      = {9781450347037},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3183713.3190657},
  doi       = {10.1145/3183713.3190657},
  abstract  = {The Cypher property graph query language is an evolving language, originally designed and implemented as part of the Neo4j graph database, and it is currently used by several commercial database products and researchers. We describe Cypher 9, which is the first version of the language governed by the openCypher Implementers Group. We first introduce the language by example, and describe its uses in industry. We then provide a formal semantic definition of the core read-query features of Cypher, including its variant of the property graph data model, and its ASCII Art graph pattern matching mechanism for expressing subgraphs of interest to an application. We compare the features of Cypher to other property graph query languages, and describe extensions, at an advanced stage of development, which will form part of Cypher 10, turning the language into a compositional language which supports graph projections and multiple named graphs.},
  booktitle = {Proceedings of the 2018 International Conference on Management of Data},
  pages     = {1433–1445},
  numpages  = {13},
  keywords  = {cypher, formal semantics, formal specification, graph databases, property graphs, query language},
  location  = {Houston, TX, USA},
  series    = {SIGMOD '18}
}


@techreport{redis_ttl,
  title       = {Redis TTL Documentation},
  author      = {{Redis Ltd.}},
  institution = {Redis Ltd.},
  year        = {2025},
  url         = {https://redis.io/commands/ttl}
}

@article{distributed_transactions,
  title     = {Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems},
  author    = {Kleppmann, Martin},
  journal   = {O'Reilly Media},
  year      = {2017},
  publisher = {O'Reilly Media},
  isbn      = {978-1449373320},
  url       = {https://dataintensive.net/}
}

@techreport{typeScript_driver,
  title       = {MongoDB Node.js Driver Documentation},
  author      = {{MongoDB Inc.}},
  institution = {MongoDB Inc.},
  year        = {2025},
  url         = {https://docs.mongodb.com/drivers/node/}
}

@article{graph_visualization,
  author   = {Herman, I. and Melancon, G. and Marshall, M.S.},
  journal  = {IEEE Transactions on Visualization and Computer Graphics},
  title    = {Graph visualization and navigation in information visualization: A survey},
  year     = {2000},
  volume   = {6},
  number   = {1},
  pages    = {24-43},
  keywords = {Navigation;Data visualization;Tree graphs;Application software;Data structures;Project management;Usability;Computer Society;Books;Taxonomy},
  doi      = {10.1109/2945.841119}
}


@techreport{cassandra_query_language,
  title       = {CQL Reference},
  author      = {{Apache Software Foundation}},
  institution = {Apache Software Foundation},
  year        = {2025},
  url         = {https://cassandra.apache.org/doc/latest/cql/}
}
@misc{claude-sonnet-4,
  title        = {Claude Sonnet 4},
  author       = {Anthropic},
  year         = {2025},
  howpublished = {\url{https://claude.ai}},
  note         = {Large language model. Accessed: 2025-07-19}
}

@misc{chatgpt_gpt4o_2025,
  author       = {OpenAI},
  title        = {ChatGPT, powered by GPT-4o (July 2025 Version)},
  year         = {2025},
  howpublished = {\url{https://chat.openai.com}},
  note         = {Model: GPT-4o, Accessed: 2025-07-19}
}

@article{mongodb_performance_benchmarks,
  title     = {Performance Evaluation of NoSQL Databases for Big Data Applications},
  author    = {Vatamaniuc, Irina and Iftene, Adrian},
  journal   = {International Journal of Advanced Computer Science and Applications},
  volume    = {6},
  number    = {12},
  pages     = {63--67},
  year      = {2015},
  publisher = {Science and Information Organization},
  doi       = {10.14569/IJACSA.2015.061209}
}

@inproceedings{mongodb_scaling_study,
  author    = {Parker, Zachary and Poe, Scott and Vrbsky, Susan V.},
  title     = {Comparing NoSQL MongoDB to an SQL DB},
  booktitle = {Proceedings of the 51st ACM Southeast Conference},
  year      = {2013},
  isbn      = {9781450318136},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2492172.2492227},
  doi       = {10.1145/2492172.2492227},
  articleno = {5},
  numpages  = {6},
  keywords  = {NoSQL, MongoDB, MySQL, database}
}
